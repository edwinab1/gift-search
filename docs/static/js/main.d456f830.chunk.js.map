{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","process","request_url","url","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,OAKd,2BAAOO,KAAK,OACRC,MAAOT,EACPU,SAfc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEPC,uCACIA,mCAEVC,EAAcC,0CAAcJ,EAAdI,qDALD,SAMIC,MAAMF,GANV,cAMbG,EANa,gBAOIA,EAASC,OAPb,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAbvB,kBAiBZK,GAjBY,4CAAH,sDCCPO,EAAe,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAEtC,OACI,yBAAKa,UAAU,0CACX,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCFHO,EAAW,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACrB,IAEGsB,EDf2BK,CAAa3B,GAAjCc,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAEtB,OACI,oCACI,4BAAKrB,GACJqB,GAAW,uBAAGJ,UAAU,uCAAb,eACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAciB,IAAKjB,EAAIC,IAAQD,UEZ1CkB,EAAgB,WAAM,MAGK3C,mBAAS,CAAC,WAHf,mBAGxB4C,EAHwB,KAGZ7C,EAHY,KAI/B,OACI,oCACI,wCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ6C,EAAWpB,KAAI,SAAAV,GAAQ,OACnB,kBAAC,EAAD,CAAU4B,IAAK5B,EACXA,SAAUA,U,MCXtC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d456f830.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cat => [inputValue,...cat])\n            setInputValue('')\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async (category) => {\n\n    const url = process.env.REACT_APP_GIPHY_URL;\n    const api_key = process.env.REACT_APP_GIPHY_API_KEY;\n\n    const request_url = url + '?q=' + category + '&limit=10&api_key=' + api_key\n    const response = await fetch(request_url);\n    const { data } = await response.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GiftGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GiftGridItem } from './GiftGridItem';\n\nexport const GiftGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className='animate__animated  animate__zoomOut'>Cargando...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img =>\n                        <GiftGridItem key={img.id} {...img} />\n                    )\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n\n    }, [category])\n    \n    return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GiftGrid } from './components/GiftGrid';\n\nexport const GiftExpertApp = () => {\n\n    //Hook\n    const [categorias, setCategories] = useState(['Homero']);\n    return (\n        <>\n            <h2>Giph App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categorias.map(category => (\n                        <GiftGrid key={category}\n                            category={category} />)\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}